{
    "bridge": {
        "name": "Dev-2",
        "username": "CA:7C:A3:34:AA:6B",
        "port": 51826,
        "pin": "784-65-424"
    },
    "platforms": [
        {
            "platform": "config",
            "name": "Config",
            "port": 8080,
            "sudo": false
        }
    ],
    "accessories": [
        {
            "type": "lightbulb-OnOff",
            "name": "Light",
            "url": "homebridge",
            "topics": {
                "getOn": "light/get",
                "setOn": "light/set"
            },
            "accessory": "mqttthing"
        },
        {
            "accessory": "mqttthing",
            "type": "valve",
            "valveType": "sprinkler",
            "name": "Sprinkler",
            "url": "http://192.168.10.35:1883",
            "topics": {
                "getActive": "test/sprinkler/getActive",
                "setActive": "test/sprinkler/setActive",
                "getInUse": "test/sprinkler/getInUse"
            },
            "integerValue": true,
            "durationTimer": true,
            "minDuration": 1,
            "maxDuration": 30
        },
        {
            "type": "television",
            "name": "Tasmota-TV",
            "url": "homebridge",
            "logMqtt": true,
            "accessory": "mqttthing",
            "topics": {
                "setActive": "cmnd/Remote/irsend",
                "setActiveInput": "cmnd/Remote/irsend"
            },
            "inputs": [
                {
                    "name": "Input 1",
                    "value": "3249178998"
                },
                {
                    "name": "Input 2",
                    "value": "input-2-rf-code"
                },
                {
                    "name": "Input 3",
                    "value": "input-3-rf-code"
                },
                {
                    "name": "Input 4",
                    "value": "input-4-rf-code"
                }
            ],
            "codec": "json",
            "jsonCodec": {
                "fixed": {
                    "Protocol": "NEC",
                    "Bits": 32
                },
                "properties": {
                    "activeIdentifier": "Data",
                    "active": "Data"
                }
            },
            "onValue": "power-on-rf-code",
            "offValue": "power-off-rf-code"
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Toggle Switch",
            "url": "homebridge",
            "logMqtt": true,
            "topics": {
                "getOn": "test/toggle/get",
                "setOn": "test/toggle/set"
            },
            "codec": "toggle.js"
        },
        {
            "accessory": "mqttthing",
            "type": "doorbell",
            "name": "Door Bell",
            "url": "homebridge",
            "caption": "Front Door Bell",
            "topics": {
                "getSwitch": {
                    "topic": "tele/RF/RESULT",
                    "apply": "return JSON.parse( message ).RfReceived.Data;"
                }
            },
            "switchValues": [
                [
                    "F1FB61"
                ]
            ],
            "restrictSwitchValues": [
                0
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "lightbulb",
            "name": "Test RGB Light",
            "url": "http://192.168.10.35:1883",
            "topics": {
                "getRGB": "test/rgblight/get",
                "setRGB": "test/rgblight/set",
                "getOn": "test/rgblight/get",
                "setOn": "test/rgblight/set"
            },
            "logMqtt": true,
            "integerValue": false,
            "codec": "json",
            "jsonCodec": {
                "properties": {
                    "on": "state.power",
                    "RGB": "state.rgb"
                },
                "fixed": {
                    "version": 1,
                    "sender": "MQTT-Thing"
                }
            }
        },
        {
            "accessory": "mqttthing",
            "type": "lightbulb-RGB",
            "name": "Winter-Light",
            "url": "homebridge",
            "topics": {
                "getRGB": {
                    "topic": "light/get",
                    "apply": "return message.r + ',' + message.g + ',' + message.b;"
                },
                "setRGB": {
                    "topic": "light/set",
                    "apply": "let rgb = message.split(',').map( v => parseInt(v) ); return { r: rgb[0], g: rgb[1], b: rgb[2] };"
                },
                "getOn": "light/get",
                "setOn": "light/set"
            },
            "logMqtt": true,
            "codec": "json",
            "jsonCodec": {
                "properties": {
                    "on": "state",
                    "RGB": "color"
                },
                "retain": true
            },
            "onValue": "ON",
            "offValue": "OFF"
        },
        {
            "type": "statelessProgrammableSwitch",
            "name": "Hall Entry",
            "url": "homebridge",
            "topics": {
                "getSwitch": "zigbee2mqtt/0x0017880104e6c096",
                "getBatteryLevel": "zigbee2mqtt/0x0017880104e6c096",
                "getStatusLowBattery": {
                    "topic": "zigbee2mqtt/0x0017880104e6c096",
                    "apply": "return message < 20;"
                }
            },
            "switchValues": [
                "on-press",
                "up-press",
                "down-press"
            ],
            "codec": "json",
            "jsonCodec": {
                "properties": {
                    "switch": "action",
                    "batteryLevel": "battery",
                    "statusLowBattery": "battery"
                }
            },
            "accessory": "mqttthing",
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "custom",
            "name": "Composite",
            "url": "homebridge",
            "logMqtt": true,
            "services": [
                {
                    "type": "switch",
                    "name": "Switch 1",
                    "topics": {
                        "getOn": "home/get/switch1/POWER",
                        "setOn": "home/set/switch1/POWER"
                    },
                    "integerValue": true
                },
                {
                    "type": "switch",
                    "name": "Switch 2",
                    "topics": {
                        "getOn": "home/get/switch2/POWER",
                        "setOn": "home/set/switch2/POWER"
                    },
                    "integerValue": true
                },
                {
                    "type": "motionSensor",
                    "name": "My PIR",
                    "topics": {
                        "getMotionDetected": "home/get/pir/STATUS",
                        "getStatusActive": "home/get/pir/ACTIVE",
                        "getStatusFault": "home/get/pir/FAULT",
                        "getStatusLowBattery": "home/get/pir/BATLOW"
                    },
                    "onValue": "MOTION",
                    "otherValueOff": true
                }
            ]
        },
        {
            "accessory": "mqttthing",
            "type": "custom",
            "name": "Flower Care",
            "url": "homebridge",
            "logMqtt": true,
            "codec": "json",
            "jsonCodec": {
                "properties": {
                    "currentRelativeHumidity": "moisture",
                    "currentTemperature": "temperature",
                    "currentAmbientLightLevel": "light",
                    "statusLowBattery": "battery"
                }
            },
            "services": [
                {
                    "type": "humiditySensor",
                    "topics": {
                        "getCurrentRelativeHumidity": "miflora/Limone",
                        "getStatusLowBattery": { "topic": "miflora/Limone", "apply": "return message < 20;" }
                    }
                }, 
                {
                    "type": "temperatureSensor",
                    "topics": {
                        "getCurrentTemperature": "miflora/Limone",
                        "getStatusLowBattery": { "topic": "miflora/Limone", "apply": "return message < 20;" }
                    }
                },
                {
                    "type": "lightSensor",
                    "topics": {
                        "getCurrentAmbientLightLevel": "miflora/Limone",
                        "getStatusLowBattery": { "topic": "miflora/Limone", "apply": "return message < 20;" }
                    }
                }
            ]
        },
        {
            "accessory": "mqttthing",
            "type": "statelessProgrammableSwitch",
            "name": "4 Way Switch",
            "url": "homebridge",
            "logMqtt": true,
            "topics": {
                "getOnline": "zigbee2mqtt/bridge/state",
                "getSwitch": "zigbee2mqtt/0x04cf8cdf3c791ad9"
            },
            "switchValues": [
                "button_1_single",
                "button_1_double",
                "button_1_hold"
            ],
            "codec": "json",
            "jsonCodec": {
                "properties": {
                    "switch": "action"
                }
            }
        },
        {
            "accessory": "mqttthing",
            "type": "lightbulb-RGBWW",
            "name": "Test RGBWW Light",
            "url": "http://192.168.10.35:1883",
            "topics": {
                "getRGBWW": "test/rgbwwlight/rgb",
                "setRGBWW": "test/rgbwwlight/rgb/set"
            },
            "whiteMix": false,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "fan",
            "name": "Test Fan",
            "url": "http://192.168.10.35:1883",
            "logMqtt": true,
            "topics": {
                "getRotationDirection": "test/fan/getRotationDirection",
                "setRotationDirection": "test/fan/setRotationDirection",
                "getRotationSpeed": "test/fan/getRotationSpeed",
                "setRotationSpeed": "test/fan/setRotationSpeed"
            },
            "integerValue": true,
            "mqttOptions": { "insecure": true }
        },
        {
            "accessory": "mqttthing",
            "type": "battery",
            "name": "Test Battery",
            "url": "http://192.168.10.35:1883",
            "logMqtt": true,
            "topics": {
                "getBatteryLevel": "battery/level",
                "getStatusLowBattery": "battery/low"
            }
        }
    ]
}
